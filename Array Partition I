#Given an array of 2n integers
#your task is to group these integers into n pairs of integer 
#say (a1, b1), (a2, b2), ..., (an, bn) 
#which makes sum of min(ai, bi) for all i from 1 to n as large as possible.



class Solution:
    def arrayPairSum(self, nums: 'List[int]') -> 'int':
        nums.sort()
        ans = 0
        for i in range(int(len(nums) / 2)):
            ans += nums[2 * i]
        return ans



public class Solution {

	public int arrayPairSum(int[] nums) {
		int[] exist = new int[20001];
		for (int i = 0; i < nums.length; i++) {
			exist[nums[i] + 10000]++;
		}
		int sum = 0;
		boolean odd = true;
		for (int i = 0; i < exist.length; i++) {
			while (exist[i] > 0) {
				if (odd) {
					sum += i - 10000;
				}
				odd = !odd;
				exist[i]--;
			}
		}
		return sum;
	}
	
}
